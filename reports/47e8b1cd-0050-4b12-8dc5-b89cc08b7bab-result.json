{"name": "test_get_available_books", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус-код 200, но получен 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "@allure.feature(\"API\")\n    @allure.story(\"Получение списка книг по наличию\")\n    @pytest.mark.api_test\n    @pytest.mark.positive_test\n    def test_get_available_books():\n            headers = {\n            'content-type': 'application/json',\n            'authorization': f'Bearer {TOKEN}'\n        }\n    \n            response = requests.get(f\"{BASE_URL_2}/products/facet?filters[onlyAvailable]=1\", headers=headers)\n>           assert response.status_code == 200, f\"Ожидался статус-код 200, но получен {response.status_code}\"\nE           AssertionError: Ожидался статус-код 200, но получен 404\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntest_api.py:119: AssertionError"}, "start": 1719415842677, "stop": 1719415842917, "uuid": "770af401-5f53-48db-9810-2d8f71299d47", "historyId": "a6484be9fbf904cbb00c158703f01f6b", "testCaseId": "a6484be9fbf904cbb00c158703f01f6b", "fullName": "test_api#test_get_available_books", "labels": [{"name": "feature", "value": "API"}, {"name": "story", "value": "Получение списка книг по наличию"}, {"name": "tag", "value": "positive_test"}, {"name": "tag", "value": "api_test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LAPTOP-DBMEEV82"}, {"name": "thread", "value": "19652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}