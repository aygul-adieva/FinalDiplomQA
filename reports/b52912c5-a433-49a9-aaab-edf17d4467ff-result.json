{"name": "test_add_book_to_cart", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'web-gate.chitai-gorod.ru/api/v1/cart/product': No scheme supplied. Perhaps you meant https://web-gate.chitai-gorod.ru/api/v1/cart/product?", "trace": "@allure.feature(\"API\")\n    @allure.story(\"Добавление книги в корзину\")\n    @pytest.mark.api_test\n    @pytest.mark.positive_test\n    def test_add_book_to_cart():\n        data = {\n            \"id\": '3018590',\n            \"adData\": {\n                \"item_list_name\": \"search\",\n                \"product_shelf\": \"\"\n            }\n        }\n    \n        headers = {\n            'content-type': 'application/json',\n            'authorization': f'Bearer {TOKEN}'\n        }\n    \n>       response = requests.post(f\"{BASE_URL}/cart/product\", json=data, headers=headers)\n\ntest_api.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Python31\\Lib\\site-packages\\requests\\api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\nC:\\Python31\\Lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\nC:\\Python31\\Lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\nC:\\Python31\\Lib\\site-packages\\requests\\sessions.py:484: in prepare_request\n    p.prepare(\nC:\\Python31\\Lib\\site-packages\\requests\\models.py:367: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [POST]>, url = 'web-gate.chitai-gorod.ru/api/v1/cart/product', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'web-gate.chitai-gorod.ru/api/v1/cart/product': No scheme supplied. Perhaps you meant https://web-gate.chitai-gorod.ru/api/v1/cart/product?\n\nC:\\Python31\\Lib\\site-packages\\requests\\models.py:438: MissingSchema"}, "start": 1719414594012, "stop": 1719414594013, "uuid": "5ab92d8d-cd89-4ee6-8ec0-76d2c30c251e", "historyId": "9f25dd4df9d2090f1a712fe3c571f617", "testCaseId": "9f25dd4df9d2090f1a712fe3c571f617", "fullName": "test_api#test_add_book_to_cart", "labels": [{"name": "story", "value": "Добавление книги в корзину"}, {"name": "feature", "value": "API"}, {"name": "tag", "value": "positive_test"}, {"name": "tag", "value": "api_test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LAPTOP-DBMEEV82"}, {"name": "thread", "value": "11164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}