{"name": "test_get_books", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус-код 200, но получен 401\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code", "trace": "@allure.feature(\"API\")\n    @allure.story(\"Получение списка книг\")\n    @pytest.mark.api_test\n    @pytest.mark.positive_test\n    def test_get_books():\n        headers = {\n            'content-type': 'application/json',\n            'authorization': f'Bearer {TOKEN}'\n        }\n        response = requests.get(f\"{BASE_URL_2}/products\", headers=headers)\n>       assert response.status_code == 200, f\"Ожидался статус-код 200, но получен {response.status_code}\"\nE       AssertionError: Ожидался статус-код 200, но получен 401\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntest_api.py:21: AssertionError"}, "start": 1719414553755, "stop": 1719414553982, "uuid": "85f9a6e7-3966-4be0-9b1f-47a5d4fc2e14", "historyId": "2bcd4394253a55b466e419474f5620cf", "testCaseId": "2bcd4394253a55b466e419474f5620cf", "fullName": "test_api#test_get_books", "labels": [{"name": "feature", "value": "API"}, {"name": "story", "value": "Получение списка книг"}, {"name": "tag", "value": "positive_test"}, {"name": "tag", "value": "api_test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LAPTOP-DBMEEV82"}, {"name": "thread", "value": "3716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}