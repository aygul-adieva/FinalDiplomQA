{"name": "test_search_space", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'web-gate.chitai-gorod.ru/api/v2/search/product?phrase=   ': No scheme supplied. Perhaps you meant https://web-gate.chitai-gorod.ru/api/v2/search/product?phrase=   ?", "trace": "@allure.feature(\"API\")\n    @allure.story(\"Пробел\")\n    @pytest.mark.api_test\n    @pytest.mark.negative_test\n    def test_search_space():\n        headers = {\n            'content-type': 'application/json',\n            'authorization': f'Bearer {TOKEN}'\n        }\n    \n>       response = requests.get(f\"{BASE_URL_2}/search/product?phrase=   \", headers=headers)\n\ntest_api.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Python31\\Lib\\site-packages\\requests\\api.py:73: in get\n    return request(\"get\", url, params=params, **kwargs)\nC:\\Python31\\Lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\nC:\\Python31\\Lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\nC:\\Python31\\Lib\\site-packages\\requests\\sessions.py:484: in prepare_request\n    p.prepare(\nC:\\Python31\\Lib\\site-packages\\requests\\models.py:367: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [GET]>, url = 'web-gate.chitai-gorod.ru/api/v2/search/product?phrase=   ', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'web-gate.chitai-gorod.ru/api/v2/search/product?phrase=   ': No scheme supplied. Perhaps you meant https://web-gate.chitai-gorod.ru/api/v2/search/product?phrase=   ?\n\nC:\\Python31\\Lib\\site-packages\\requests\\models.py:438: MissingSchema"}, "start": 1719414593791, "stop": 1719414593793, "uuid": "b1e21ee0-06b0-407a-8bc2-db44cae67cdb", "historyId": "68d74eb797febd16d034aabbadffa454", "testCaseId": "68d74eb797febd16d034aabbadffa454", "fullName": "test_api#test_search_space", "labels": [{"name": "feature", "value": "API"}, {"name": "story", "value": "Пробел"}, {"name": "tag", "value": "negative_test"}, {"name": "tag", "value": "api_test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LAPTOP-DBMEEV82"}, {"name": "thread", "value": "11164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}