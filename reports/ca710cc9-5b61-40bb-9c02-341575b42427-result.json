{"name": "test_get_books_by_author", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус-код 200, но получен 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "@allure.feature(\"API\")\n    @allure.story(\"Получение списка книг по автору\")\n    @pytest.mark.api_test\n    @pytest.mark.positive_test\n    def test_get_books_by_author():\n            headers = {\n            'content-type': 'application/json',\n            'authorization': f'Bearer {TOKEN}'\n        }\n    \n            response = requests.get(f\"{BASE_URL_2}/products/facet?filters[authors]=593251\", headers=headers)\n>           assert response.status_code == 200, f\"Ожидался статус-код 200, но получен {response.status_code}\"\nE           AssertionError: Ожидался статус-код 200, но получен 404\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntest_api.py:106: AssertionError"}, "start": 1719415262696, "stop": 1719415262944, "uuid": "33ad6b1b-83cf-4946-bb82-a4def36ddce0", "historyId": "c30d674fa30db3642902b82dc18a0da2", "testCaseId": "c30d674fa30db3642902b82dc18a0da2", "fullName": "test_api#test_get_books_by_author", "labels": [{"name": "story", "value": "Получение списка книг по автору"}, {"name": "feature", "value": "API"}, {"name": "tag", "value": "positive_test"}, {"name": "tag", "value": "api_test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LAPTOP-DBMEEV82"}, {"name": "thread", "value": "8692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}